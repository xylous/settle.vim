*settle.vim.txt* the (n)vim wrapper for `xylous/settle`

================================================================================
CONTENTS                                                     *SettleVimContents*

    1. Usage .................................. |SettleVimusage|
    2. License ................................ |SettleVimLicense|
    3. Contributing ........................... |SettleVimContributing|
    4. Credits ................................ |SettleVimCredits|

================================================================================
Section 1: Usage                                                *SettleVimUsage*

settle.vim is a wrapper around `settle` (https://github.com/xylous/settle).

settle.vim exports the following commands:

    `:SettleNew` accepts two arguments: the first is the project (as per settle
v0.36.0), the second is the title of the zettel. It creates a new file using
settle and then opens it for you to edit. NOTE: since is a user-defined
function, arguments are separated by commas, e.g. `:SettleNew 'inbox','My new
note'`.

    `:SettleNewFromLink` doesn't accept any argument: instead, it yanks the text in
the (ASSUMED) wiki-style link under cursor and runs `:SettleNew`. The resulting
Zettel is placed in the root of the Zettelkasten directory.

    `:SettleNewFromPrompt` accepts no arguments. When ran, it prompts the user
for the project and the title of the Zettel you want. If the title is empty, it
aborts. Otherwise, it runs `:SettleNew` with the specified parameters

    `:SettleQuery <QUERY>` runs `settle query <QUERY>` and opens FZF for you to
    browse the results. Note that `<QUERY>` is an optional argument, and if it
    isn't provided then the entire Zettelkasten appears in the results.

    `:SettleFollow` follows the wikilink under the cursor, if it exists

    `:SettleBacklink` practically undoes `:SettleFollow`; it sends you to the
    buffer through which you opened the current one through a link. Suppose
    you're inside note X and you run `:SettleFollow` to note Y; running
    `:SettleBacklink` inside note Y opens note X.

    `:SettleGraph` works only if you have xdot installed. It uses that app to
    open/read a graph of the entire Zettelkasten.

Additionally, the plugin defines two text objects: `il` ("inside link") and `al`
("around link"). Both match everything between `[[` and the first matching `]]`,
but the latter also matches the double square parentheses, unlike the former.

Also, the plugin provides completion for note titles, but only in markdown
buffers. Completion is triggered by typing a word and then pressing
`<CTRL-x><CTRL-u>` in insert mode.

================================================================================
Section 2: License                                            *SettleVimLicense*

This plugin is licensed under the MIT license. The full text of the license
is available at:

https://github.com/xylous/settle.vim/blob/master/LICENSE

Or (raw text):

https://raw.githubusercontent.com/xylous/settle.vim/master/LICENSE

================================================================================
Section 3: Contributing                                  *SettleVimContributing*

If you want to contribute, open an Issue or a Pull Request on GitHub.

================================================================================
Section 4: Credits                                            *SettleVimCredits*

This plugin was written by xylous <xylous.e@gmail.com>.
